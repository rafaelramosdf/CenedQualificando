// <auto-generated />
using System;
using CenedQualificando.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CenedQualificando.Infra.Migrations
{
    [DbContext(typeof(EntityContext))]
    [Migration("20201011145954_AtualizandoSequencial_2020-10-11_12-00")]
    partial class AtualizandoSequencial_20201011_1200
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.SequencialAgentePenitenciario", "'SequencialAgentePenitenciario', '', '35', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialAgentePenitenciarioParceria", "'SequencialAgentePenitenciarioParceria', '', '16', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialAgentePenitenciarioParceriaPagamentos", "'SequencialAgentePenitenciarioParceriaPagamentos', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialAluno", "'SequencialAluno', '', '9482', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialCargaHorariaDiaria", "'SequencialCargaHorariaDiaria', '', '32', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialCurso", "'SequencialCurso', '', '138', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialCursoUf", "'SequencialCursoUf', '', '343', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialDeclaracaoCursosConcluidos", "'SequencialDeclaracaoCursosConcluidos', '', '222', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialDespesaExtra", "'SequencialDespesaExtra', '', '866', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialEstoqueMaterial", "'SequencialEstoqueMaterial', '', '92', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialFiscalSala", "'SequencialFiscalSala', '', '17', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialGrupoDePermissao", "'SequencialGrupoDePermissao', '', '12', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialGrupoProva", "'SequencialGrupoProva', '', '3', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialGruposProvaUf", "'SequencialGruposProvaUf', '', '7', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialHistoricoCurso", "'SequencialHistoricoCurso', '', '379998', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialImpressaoCertificado", "'SequencialImpressaoCertificado', '', '121', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialLogAuditoria", "'SequencialLogAuditoria', '', '8104', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialMatricula", "'SequencialMatricula', '', '30010', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialMensagem", "'SequencialMensagem', '', '1422', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialMensagemPersonalizada", "'SequencialMensagemPersonalizada', '', '3', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialNumeroCertificado", "'SequencialNumeroCertificado', '', '19906', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialNumeroMatricula", "'SequencialNumeroMatricula', '', '24838', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialNumeroOficio", "'SequencialNumeroOficio', '', '1543', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialPenitenciaria", "'SequencialPenitenciaria', '', '385', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialPermissao", "'SequencialPermissao', '', '1235', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialProva", "'SequencialProva', '', '26438', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialRepresentante", "'SequencialRepresentante', '', '10', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialSolicitacaoAutorizacaoMatricula", "'SequencialSolicitacaoAutorizacaoMatricula', '', '366', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialSolicitacaoAutorizacaoMatriculaCursos", "'SequencialSolicitacaoAutorizacaoMatriculaCursos', '', '469', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialSolicitacaoCertificado", "'SequencialSolicitacaoCertificado', '', '2500', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialTabelaCursosAutorizados", "'SequencialTabelaCursosAutorizados', '', '3119', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialTabelaHistoricoCurso", "'SequencialTabelaHistoricoCurso', '', '16', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialToken", "'SequencialToken', '', '2817', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialTransacao", "'SequencialTransacao', '', '24394', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialTransacaoCieloSolicitacaoCertificado", "'SequencialTransacaoCieloSolicitacaoCertificado', '', '1498', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialUfEntrega", "'SequencialUfEntrega', '', '28', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.SequencialUsuario", "'SequencialUsuario', '', '34', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CenedQualificando.Domain.Models.AgentePenitenciario", b =>
                {
                    b.Property<int>("IdAgentePenitenciario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialAgentePenitenciario");

                    b.Property<bool>("AgentePenitenciarioParceria")
                        .HasColumnType("bit");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmarSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataExpiracaoSenha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInicioParceria")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGrupoDePermissao")
                        .HasColumnType("int");

                    b.Property<int>("IdPenitenciaria")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdAgentePenitenciario")
                        .HasName("PK_Penitenciario.AgentePenitenciario");

                    b.HasIndex("IdGrupoDePermissao")
                        .HasName("IX_IdGrupoDePermissao");

                    b.HasIndex("IdPenitenciaria")
                        .HasName("IX_IdPenitenciaria");

                    b.ToTable("AgentePenitenciario","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.AgentePenitenciarioParceria", b =>
                {
                    b.Property<int>("IdAgentePenitenciarioParceria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialAgentePenitenciarioParceria");

                    b.Property<DateTime?>("DataInicioParceria")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAgentePenitenciario")
                        .HasColumnType("int");

                    b.Property<int>("IdPenitenciaria")
                        .HasColumnType("int");

                    b.HasKey("IdAgentePenitenciarioParceria")
                        .HasName("PK_Penitenciario.AgentePenitenciarioParceria");

                    b.ToTable("AgentePenitenciarioParceria","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.AgentePenitenciarioParceriaPagamentos", b =>
                {
                    b.Property<int>("IdAgentePenitenciarioParceriaPagamentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialAgentePenitenciarioParceriaPagamentos");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAgentePenitenciario")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PeriodoFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PeriodoInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RecebimentoConfirmado")
                        .HasColumnType("datetime");

                    b.Property<string>("RecebimentoConfirmadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValorPeriodo")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdAgentePenitenciarioParceriaPagamentos")
                        .HasName("PK_Penitenciario.AgentePenitenciarioParceriaPagamentos");

                    b.ToTable("AgentePenitenciarioParceriaPagamentos","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Aluno", b =>
                {
                    b.Property<int>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialAluno");

                    b.Property<string>("Ala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtuacaoHabilitacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bloco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CidadeTrabalho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CondicaoPreso")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmarSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfPreposto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoneComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoneResidencial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrauInstrucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPenitenciaria")
                        .HasColumnType("int");

                    b.Property<string>("LocalTrabalho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naturalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePreposto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgaoExpedidor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgaoExpedidorPreposto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profissao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Regime")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RgPreposto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<int>("SexoPreposto")
                        .HasColumnType("int");

                    b.Property<int>("UfNaturalidade")
                        .HasColumnType("int");

                    b.Property<int>("UfResidencial")
                        .HasColumnType("int");

                    b.Property<int>("UfTrabalho")
                        .HasColumnType("int");

                    b.Property<int>("Vinculo")
                        .HasColumnType("int");

                    b.HasKey("IdAluno")
                        .HasName("PK_Penitenciario.Aluno");

                    b.HasIndex("IdPenitenciaria")
                        .HasName("IX_IdPenitenciaria");

                    b.ToTable("Aluno","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.CargaHorariaDiaria", b =>
                {
                    b.Property<int>("IdCargaHorariaDiaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialCargaHorariaDiaria");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdCargaHorariaDiaria")
                        .HasName("PK_Penitenciario.CargaHorariaDiaria");

                    b.ToTable("CargaHorariaDiaria","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialCurso");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Taxa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdCurso")
                        .HasName("PK_Penitenciario.Curso");

                    b.ToTable("Curso","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.CursoUf", b =>
                {
                    b.Property<int>("IdCursoUf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialCursoUf");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdCursoUf")
                        .HasName("PK_Penitenciario.CursoUf");

                    b.ToTable("CursoUf","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.CursoUfCurso", b =>
                {
                    b.Property<int>("CursoUfIdCursoUf")
                        .HasColumnName("CursoUf_IdCursoUf")
                        .HasColumnType("int");

                    b.Property<int>("CursoIdCurso")
                        .HasColumnName("Curso_IdCurso")
                        .HasColumnType("int");

                    b.HasKey("CursoUfIdCursoUf", "CursoIdCurso")
                        .HasName("PK_Penitenciario.CursoUfCurso");

                    b.HasIndex("CursoIdCurso")
                        .HasName("IX_Curso_IdCurso");

                    b.HasIndex("CursoUfIdCursoUf")
                        .HasName("IX_CursoUf_IdCursoUf");

                    b.ToTable("CursoUfCurso","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.DeclaracaoCursosConcluidos", b =>
                {
                    b.Property<int>("IdDeclaracaoCursosConcluidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialDeclaracaoCursosConcluidos");

                    b.Property<DateTime?>("DataGeracao")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<string>("NomeMae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("NumeroCriptografado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefixo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDeclaracaoCursosConcluidos")
                        .HasName("PK_Penitenciario.DeclaracaoCursosConcluidos");

                    b.ToTable("DeclaracaoCursosConcluidos","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.DespesaExtra", b =>
                {
                    b.Property<int>("IdDespesaExtra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialDespesaExtra");

                    b.Property<string>("Boleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdDespesaExtra")
                        .HasName("PK_Penitenciario.DespesaExtra");

                    b.HasIndex("IdMatricula")
                        .HasName("IX_IdMatricula");

                    b.ToTable("DespesaExtra","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.EstoqueMaterial", b =>
                {
                    b.Property<int>("IdEstoqueMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialEstoqueMaterial");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeApostila")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeProva")
                        .HasColumnType("int");

                    b.Property<int>("UfEstoque")
                        .HasColumnType("int");

                    b.HasKey("IdEstoqueMaterial")
                        .HasName("PK_Penitenciario.EstoqueMaterial");

                    b.HasIndex("IdCurso")
                        .HasName("IX_IdCurso");

                    b.ToTable("EstoqueMaterial","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.FiscalSala", b =>
                {
                    b.Property<int>("IdFiscalSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialFiscalSala");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdFiscalSala")
                        .HasName("PK_Penitenciario.FiscalSala");

                    b.ToTable("FiscalSala","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.GrupoDePermissao", b =>
                {
                    b.Property<int>("IdGrupoDePermissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialGrupoDePermissao");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Oculto")
                        .HasColumnType("bit");

                    b.HasKey("IdGrupoDePermissao")
                        .HasName("PK_Penitenciario.GrupoDePermissao");

                    b.ToTable("GrupoDePermissao","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.GrupoProva", b =>
                {
                    b.Property<int>("IdGrupoProva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialGrupoProva");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prova1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prova2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prova3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prova4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prova5")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGrupoProva")
                        .HasName("PK_Penitenciario.GrupoProva");

                    b.ToTable("GrupoProva","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.GruposProvaUf", b =>
                {
                    b.Property<int>("IdGruposProvaUf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialGruposProvaUf");

                    b.Property<int>("IdGrupoProva")
                        .HasColumnType("int");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdGruposProvaUf")
                        .HasName("PK_Penitenciario.GruposProvaUf");

                    b.HasIndex("IdGrupoProva")
                        .HasName("IX_IdGrupoProva");

                    b.ToTable("GruposProvaUf","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.GruposProvaUfCurso", b =>
                {
                    b.Property<int>("GruposProvaUfIdGruposProvaUf")
                        .HasColumnName("GruposProvaUf_IdGruposProvaUf")
                        .HasColumnType("int");

                    b.Property<int>("CursoIdCurso")
                        .HasColumnName("Curso_IdCurso")
                        .HasColumnType("int");

                    b.HasKey("GruposProvaUfIdGruposProvaUf", "CursoIdCurso")
                        .HasName("PK_Penitenciario.GruposProvaUfCurso");

                    b.HasIndex("CursoIdCurso")
                        .HasName("IX_Curso_IdCurso");

                    b.HasIndex("GruposProvaUfIdGruposProvaUf")
                        .HasName("IX_GruposProvaUf_IdGruposProvaUf");

                    b.ToTable("GruposProvaUfCurso","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.HistoricoCurso", b =>
                {
                    b.Property<int>("IdHistoricoCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialHistoricoCurso");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime");

                    b.Property<int>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<int>("IdTabelaHistoricoCurso")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHistoricoCurso")
                        .HasName("PK_Penitenciario.HistoricoCurso");

                    b.HasIndex("IdMatricula")
                        .HasName("IX_IdMatricula");

                    b.HasIndex("IdTabelaHistoricoCurso")
                        .HasName("IX_IdTabelaHistoricoCurso");

                    b.ToTable("HistoricoCurso","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.ImpressaoCertificado", b =>
                {
                    b.Property<int>("IdImpressaoCertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialImpressaoCertificado");

                    b.Property<string>("ConteudoCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.HasKey("IdImpressaoCertificado")
                        .HasName("PK_Penitenciario.ImpressaoCertificado");

                    b.HasIndex("IdCurso")
                        .HasName("IX_IdCurso");

                    b.ToTable("ImpressaoCertificado","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.LogAuditoria", b =>
                {
                    b.Property<int>("IdLogAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialLogAuditoria");

                    b.Property<int>("CpfUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataOperacao")
                        .HasColumnType("datetime");

                    b.Property<string>("EnderecoIp")
                        .HasColumnName("EnderecoIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroMatricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SituacaoCurso")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoCursoAnterior")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("SituacaoFinanceiraAnterior")
                        .HasColumnType("int");

                    b.Property<int>("TipoOperacao")
                        .HasColumnType("int");

                    b.HasKey("IdLogAuditoria")
                        .HasName("PK_Penitenciario.LogAuditoria");

                    b.ToTable("LogAuditoria","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Matricula", b =>
                {
                    b.Property<int>("IdMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialMatricula");

                    b.Property<string>("Boleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CertificadoEnviado")
                        .HasColumnType("datetime");

                    b.Property<int>("CertificadoEnviadoPara")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CertificadoExpedido")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataMatricula")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPiso")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPostagem")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPrescricao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataStatusCurso")
                        .HasColumnType("datetime");

                    b.Property<int>("EnvioMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("IdPenitenciaria")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InicioCurso")
                        .HasColumnType("datetime");

                    b.Property<string>("Livro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialDidatico")
                        .HasColumnType("int");

                    b.Property<int>("MaterialEnviadoPara")
                        .HasColumnType("int");

                    b.Property<string>("NumeroMatricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pagina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<bool>("PossuiBolsaParceria")
                        .HasColumnType("bit");

                    b.Property<string>("Registro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Representante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SolicitacaoCancelamento")
                        .HasColumnType("int");

                    b.Property<int>("StatusCurso")
                        .HasColumnType("int");

                    b.Property<int>("StatusFinanceiro")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TerminoCurso")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdMatricula")
                        .HasName("PK_Penitenciario.Matricula");

                    b.HasIndex("IdAluno")
                        .HasName("IX_IdAluno");

                    b.HasIndex("IdCurso")
                        .HasName("IX_IdCurso");

                    b.HasIndex("IdPenitenciaria")
                        .HasName("IX_IdPenitenciaria");

                    b.HasIndex("IdUsuario")
                        .HasName("IX_IdUsuario");

                    b.ToTable("Matricula","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Mensagem", b =>
                {
                    b.Property<int>("IdMensagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialMensagem");

                    b.Property<int>("Autor")
                        .HasColumnType("int");

                    b.Property<int>("CopiaPara")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioEmitente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMensagem")
                        .HasName("PK_Penitenciario.Mensagem");

                    b.HasIndex("IdAluno")
                        .HasName("IX_IdAluno");

                    b.ToTable("Mensagem","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.MensagemPersonalizada", b =>
                {
                    b.Property<int>("IdMensagemPersonalizada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialMensagemPersonalizada");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMensagemPersonalizada")
                        .HasName("PK_Penitenciario.MensagemPersonalizada");

                    b.ToTable("MensagemPersonalizada","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.NumeroCertificado", b =>
                {
                    b.Property<int>("IdNumeroCertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialNumeroCertificado");

                    b.Property<string>("Criptografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Prefixo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNumeroCertificado")
                        .HasName("PK_Penitenciario.NumeroCertificado");

                    b.ToTable("NumeroCertificado","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.NumeroMatricula", b =>
                {
                    b.Property<int>("IdNumeroMatricula")
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialNumeroMatricula");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Prefixo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNumeroMatricula")
                        .HasName("PK_Penitenciario.NumeroMatricula");

                    b.ToTable("NumeroMatricula","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.NumeroOficio", b =>
                {
                    b.Property<int>("IdNumeroOficio")
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialNumeroOficio");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("IdNumeroOficio")
                        .HasName("PK_Penitenciario.NumeroOficio");

                    b.ToTable("NumeroOficio","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Penitenciaria", b =>
                {
                    b.Property<int>("IdPenitenciaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialPenitenciaria");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<int>("BolsasConcedidas")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataInicioBolsaParceria")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailContatoDepartamentoEnsino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDepartamentoEnsino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossuiBolsaParceria")
                        .HasColumnType("bit");

                    b.Property<string>("ResponsavelDepartamentoEnsino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TituloCargoDepartamentoEnsino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdPenitenciaria")
                        .HasName("PK_Penitenciario.Penitenciaria");

                    b.ToTable("Penitenciaria","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Permissao", b =>
                {
                    b.Property<int>("IdPermissao")
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialPermissao");

                    b.Property<int>("IdGrupoDePermissao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPermissao")
                        .HasName("PK_Penitenciario.Permissao");

                    b.HasIndex("IdGrupoDePermissao")
                        .HasName("IX_IdGrupoDePermissao");

                    b.ToTable("Permissao","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Prova", b =>
                {
                    b.Property<int>("IdProva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialProva");

                    b.Property<DateTime?>("DataAgendadaProva")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataEnvioProva")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataRecebidaProva")
                        .HasColumnType("datetime");

                    b.Property<int>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<decimal?>("Nota")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ResultadoProva")
                        .HasColumnType("int");

                    b.Property<string>("TipoProva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProva")
                        .HasName("PK_Penitenciario.Prova");

                    b.HasIndex("IdMatricula")
                        .HasName("IX_IdMatricula");

                    b.ToTable("Prova","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Representante", b =>
                {
                    b.Property<int>("IdRepresentante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialRepresentante");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdRepresentante")
                        .HasName("PK_Penitenciario.Representante");

                    b.ToTable("Representante","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.SolicitacaoAutorizacaoMatricula", b =>
                {
                    b.Property<int>("IdSolicitacaoAutorizacaoMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialSolicitacaoAutorizacaoMatricula");

                    b.Property<string>("Ala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bloco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfInterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfSolicitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnderecoIp")
                        .HasColumnName("EnderecoIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrauEscolaridade")
                        .HasColumnType("int");

                    b.Property<int>("IdPenitenciaria")
                        .HasColumnType("int");

                    b.Property<string>("ListaDeCursos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeInterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSolicitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSolicitante")
                        .HasColumnType("int");

                    b.HasKey("IdSolicitacaoAutorizacaoMatricula")
                        .HasName("PK_Penitenciario.SolicitacaoAutorizacaoMatricula");

                    b.ToTable("SolicitacaoAutorizacaoMatricula","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.SolicitacaoAutorizacaoMatriculaCursos", b =>
                {
                    b.Property<int>("IdSolicitacaoAutorizacaoMatriculaCursos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialSolicitacaoAutorizacaoMatriculaCursos");

                    b.Property<DateTime?>("DataUltimaSituacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdAgentePenitenciario")
                        .HasColumnType("int");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitacaoAutorizacaoMatricula")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("IdSolicitacaoAutorizacaoMatriculaCursos")
                        .HasName("PK_Penitenciario.SolicitacaoAutorizacaoMatriculaCursos");

                    b.ToTable("SolicitacaoAutorizacaoMatriculaCursos","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.SolicitacaoCertificado", b =>
                {
                    b.Property<int>("IdSolicitacaoCertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialSolicitacaoCertificado");

                    b.Property<Guid>("CodigoPagamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CpfSolicitante")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("EnderecoBairro")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EnderecoCep")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EnderecoCidade")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EnderecoComplemento")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EnderecoLogradouro")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EnderecoNumero")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("EnderecoUf")
                        .HasColumnType("int");

                    b.Property<int>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<string>("NomeSolicitante")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("NumeroBoleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrazoEntrega")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("ValorFrete")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdSolicitacaoCertificado")
                        .HasName("PK_Penitenciario.SolicitacaoCertificado");

                    b.HasIndex("IdMatricula")
                        .HasName("IX_IdMatricula");

                    b.ToTable("SolicitacaoCertificado","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.TabelaCursosAutorizados", b =>
                {
                    b.Property<int>("IdTabelaCursosAutorizados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialTabelaCursosAutorizados");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("NomeAluno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePenitenciaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneCelular1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneCelular2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTabelaCursosAutorizados")
                        .HasName("PK_Penitenciario.TabelaCursosAutorizados");

                    b.ToTable("TabelaCursosAutorizados","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.TabelaHistoricoCurso", b =>
                {
                    b.Property<int>("IdTabelaHistoricoCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialTabelaHistoricoCurso");

                    b.Property<int>("Agrupador")
                        .HasColumnType("int");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PreDefinido")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTabelaHistoricoCurso")
                        .HasName("PK_Penitenciario.TabelaHistoricoCurso");

                    b.ToTable("TabelaHistoricoCurso","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Token", b =>
                {
                    b.Property<int>("IdToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialToken");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdToken")
                        .HasName("PK_Penitenciario.Token");

                    b.ToTable("Token","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Transacao", b =>
                {
                    b.Property<int>("IdTransacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialTransacao");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BandeiraCartao")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfAluno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataUltimaSituacao")
                        .HasColumnType("datetime");

                    b.Property<int>("FormaEnvioMaterial")
                        .HasColumnType("int");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("IdPenitenciaria")
                        .HasColumnType("int");

                    b.Property<string>("IdTransacaoCielo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MensagemErro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAluno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePenitenciaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int");

                    b.Property<int>("Uf")
                        .HasColumnName("UF")
                        .HasColumnType("int");

                    b.Property<string>("UfEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UltimaSituacao")
                        .HasColumnType("int");

                    b.Property<string>("UrlPagamentoCielo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdTransacao")
                        .HasName("PK_Penitenciario.Transacao");

                    b.ToTable("Transacao","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.TransacaoCieloSolicitacaoCertificado", b =>
                {
                    b.Property<int>("IdTransacaoCieloSolicitacaoCertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialTransacaoCieloSolicitacaoCertificado");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BandeiraCartao")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CodigoPagamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfSolicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataUltimaSituacao")
                        .HasColumnType("datetime");

                    b.Property<int>("FormaPagamento")
                        .HasColumnType("int");

                    b.Property<string>("IdTransacaoCielo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MensagemErro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSolicitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroBoleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int");

                    b.Property<string>("UfEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UltimaSituacao")
                        .HasColumnType("int");

                    b.Property<string>("UrlPagamentoCielo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("IdTransacaoCieloSolicitacaoCertificado")
                        .HasName("PK_Penitenciario.TransacaoCieloSolicitacaoCertificado");

                    b.ToTable("TransacaoCieloSolicitacaoCertificado","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.UfEntrega", b =>
                {
                    b.Property<int>("IdUf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialUfEntrega");

                    b.Property<decimal>("Taxa")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdUf")
                        .HasName("PK_Penitenciario.UfEntrega");

                    b.ToTable("UfEntrega","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequencialUsuario");

                    b.Property<int>("Ativo")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmarSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataExpiracaoSenha")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdGrupoDePermissao")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Uf")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario")
                        .HasName("PK_Penitenciario.Usuario");

                    b.HasIndex("IdGrupoDePermissao")
                        .HasName("IX_IdGrupoDePermissao");

                    b.ToTable("Usuario","Penitenciario");
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.AgentePenitenciario", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.GrupoDePermissao", "IdGrupoDePermissaoNavigation")
                        .WithMany("AgentePenitenciario")
                        .HasForeignKey("IdGrupoDePermissao")
                        .HasConstraintName("FK_Penitenciario.AgentePenitenciario_Penitenciario.GrupoDePermissao_IdGrupoDePermissao")
                        .IsRequired();

                    b.HasOne("CenedQualificando.Domain.Models.Penitenciaria", "IdPenitenciariaNavigation")
                        .WithMany("AgentePenitenciario")
                        .HasForeignKey("IdPenitenciaria")
                        .HasConstraintName("FK_Penitenciario.AgentePenitenciario_Penitenciario.Penitenciaria_IdPenitenciaria")
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Aluno", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Penitenciaria", "IdPenitenciariaNavigation")
                        .WithMany("Aluno")
                        .HasForeignKey("IdPenitenciaria")
                        .HasConstraintName("FK_Penitenciario.Aluno_Penitenciario.Penitenciaria_IdPenitenciaria")
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.CursoUfCurso", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Curso", "CursoIdCursoNavigation")
                        .WithMany("CursoUfCurso")
                        .HasForeignKey("CursoIdCurso")
                        .HasConstraintName("FK_Penitenciario.CursoUfCurso_Penitenciario.Curso_Curso_IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CenedQualificando.Domain.Models.CursoUf", "CursoUfIdCursoUfNavigation")
                        .WithMany("CursoUfCurso")
                        .HasForeignKey("CursoUfIdCursoUf")
                        .HasConstraintName("FK_Penitenciario.CursoUfCurso_Penitenciario.CursoUf_CursoUf_IdCursoUf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.DespesaExtra", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Matricula", "IdMatriculaNavigation")
                        .WithMany("DespesaExtra")
                        .HasForeignKey("IdMatricula")
                        .HasConstraintName("FK_Penitenciario.DespesaExtra_Penitenciario.Matricula_IdMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.EstoqueMaterial", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Curso", "IdCursoNavigation")
                        .WithMany("EstoqueMaterial")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("FK_Penitenciario.EstoqueMaterial_Penitenciario.Curso_IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.GruposProvaUf", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.GrupoProva", "IdGrupoProvaNavigation")
                        .WithMany("GruposProvaUf")
                        .HasForeignKey("IdGrupoProva")
                        .HasConstraintName("FK_Penitenciario.GruposProvaUf_Penitenciario.GrupoProva_IdGrupoProva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.GruposProvaUfCurso", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Curso", "CursoIdCursoNavigation")
                        .WithMany("GruposProvaUfCurso")
                        .HasForeignKey("CursoIdCurso")
                        .HasConstraintName("FK_Penitenciario.GruposProvaUfCurso_Penitenciario.Curso_Curso_IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CenedQualificando.Domain.Models.GruposProvaUf", "GruposProvaUfIdGruposProvaUfNavigation")
                        .WithMany("GruposProvaUfCurso")
                        .HasForeignKey("GruposProvaUfIdGruposProvaUf")
                        .HasConstraintName("FK_Penitenciario.GruposProvaUfCurso_Penitenciario.GruposProvaUf_GruposProvaUf_IdGruposProvaUf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.HistoricoCurso", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Matricula", "IdMatriculaNavigation")
                        .WithMany("HistoricoCurso")
                        .HasForeignKey("IdMatricula")
                        .HasConstraintName("FK_Penitenciario.HistoricoCurso_Penitenciario.Matricula_IdMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CenedQualificando.Domain.Models.TabelaHistoricoCurso", "IdTabelaHistoricoCursoNavigation")
                        .WithMany("HistoricoCurso")
                        .HasForeignKey("IdTabelaHistoricoCurso")
                        .HasConstraintName("FK_Penitenciario.HistoricoCurso_Penitenciario.TabelaHistoricoCurso_IdTabelaHistoricoCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.ImpressaoCertificado", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Curso", "IdCursoNavigation")
                        .WithMany("ImpressaoCertificado")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("FK_Penitenciario.ImpressaoCertificado_Penitenciario.Curso_IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Matricula", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Aluno", "IdAlunoNavigation")
                        .WithMany("Matricula")
                        .HasForeignKey("IdAluno")
                        .HasConstraintName("FK_Penitenciario.Matricula_Penitenciario.Aluno_IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CenedQualificando.Domain.Models.Curso", "IdCursoNavigation")
                        .WithMany("Matricula")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("FK_Penitenciario.Matricula_Penitenciario.Curso_IdCurso")
                        .IsRequired();

                    b.HasOne("CenedQualificando.Domain.Models.Penitenciaria", "IdPenitenciariaNavigation")
                        .WithMany("Matricula")
                        .HasForeignKey("IdPenitenciaria")
                        .HasConstraintName("FK_Penitenciario.Matricula_Penitenciario.Penitenciaria_IdPenitenciaria")
                        .IsRequired();

                    b.HasOne("CenedQualificando.Domain.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Matricula")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Penitenciario.Matricula_Penitenciario.Usuario_IdUsuario")
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Mensagem", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Aluno", "IdAlunoNavigation")
                        .WithMany("Mensagem")
                        .HasForeignKey("IdAluno")
                        .HasConstraintName("FK_Penitenciario.Mensagem_Penitenciario.Aluno_IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Permissao", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.GrupoDePermissao", "IdGrupoDePermissaoNavigation")
                        .WithMany("Permissao")
                        .HasForeignKey("IdGrupoDePermissao")
                        .HasConstraintName("FK_Penitenciario.Permissao_Penitenciario.GrupoDePermissao_IdGrupoDePermissao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Prova", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Matricula", "IdMatriculaNavigation")
                        .WithMany("Prova")
                        .HasForeignKey("IdMatricula")
                        .HasConstraintName("FK_Penitenciario.Prova_Penitenciario.Matricula_IdMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.SolicitacaoCertificado", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.Matricula", "IdMatriculaNavigation")
                        .WithMany("SolicitacaoCertificado")
                        .HasForeignKey("IdMatricula")
                        .HasConstraintName("FK_Penitenciario.SolicitacaoCertificado_Penitenciario.Matricula_IdMatricula")
                        .IsRequired();
                });

            modelBuilder.Entity("CenedQualificando.Domain.Models.Usuario", b =>
                {
                    b.HasOne("CenedQualificando.Domain.Models.GrupoDePermissao", "IdGrupoDePermissaoNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdGrupoDePermissao")
                        .HasConstraintName("FK_Penitenciario.Usuario_Penitenciario.GrupoDePermissao_IdGrupoDePermissao")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
